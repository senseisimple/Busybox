diff --git a/coreutils/df.c b/coreutils/df.c
index 63dbd61..e093333 100644
--- a/coreutils/df.c
+++ b/coreutils/df.c
@@ -68,6 +68,73 @@ static unsigned long kscale(unsigned long b, unsigned long bs)
 }
 #endif
 
+struct mntent *getmntent_df (FILE *);
+struct mntent *getmntent_df (FILE *stream)
+{
+  static struct mntent m;
+  static char *getmntent_buffer;
+
+  #define BUFFER_SIZE 4096
+  if (getmntent_buffer == NULL) {
+    getmntent_buffer = (char *) malloc (BUFFER_SIZE);
+  }
+
+  return getmntent_r (stream, &m, getmntent_buffer, BUFFER_SIZE);
+  #undef BUFFER_SIZE
+}
+
+struct mntent* FAST_FUNC find_mount_point_df(const char *, int);
+struct mntent* FAST_FUNC find_mount_point_df(const char *name, int subdir_too)
+{
+	struct stat s;
+	FILE *mtab_fp;
+	struct mntent *mountEntry;
+	dev_t devno_of_name;
+	bool block_dev;
+
+	if (stat(name, &s) != 0)
+		return NULL;
+
+	devno_of_name = s.st_dev;
+	block_dev = 0;
+	/* Why S_ISCHR? - UBI volumes use char devices, not block */
+	if (S_ISBLK(s.st_mode) || S_ISCHR(s.st_mode)) {
+		devno_of_name = s.st_rdev;
+		block_dev = 1;
+	}
+
+	mtab_fp = setmntent(bb_path_mtab_file, "r");
+	if (!mtab_fp)
+		return NULL;
+
+	while ((mountEntry = getmntent_df(mtab_fp)) != NULL) {
+		/* rootfs mount in Linux 2.6 exists always,
+		 * and it makes sense to always ignore it.
+		 * Otherwise people can't reference their "real" root! */
+		if (ENABLE_FEATURE_SKIP_ROOTFS && strcmp(mountEntry->mnt_fsname, "rootfs") == 0)
+			continue;
+
+		if (strcmp(name, mountEntry->mnt_dir) == 0
+		 || strcmp(name, mountEntry->mnt_fsname) == 0
+		) { /* String match. */
+			break;
+		}
+
+		if (!(subdir_too || block_dev))
+			continue;
+
+		/* Is device's dev_t == name's dev_t? */
+		if (stat(mountEntry->mnt_fsname, &s) == 0 && s.st_rdev == devno_of_name)
+			break;
+		/* Match the directory's mount point. */
+		if (stat(mountEntry->mnt_dir, &s) == 0 && s.st_dev == devno_of_name)
+			break;
+	}
+	endmntent(mtab_fp);
+
+	return mountEntry;
+}
+
 int df_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int df_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -150,7 +217,7 @@ int df_main(int argc UNUSED_PARAM, char **argv)
 		const char *mount_point;
 
 		if (mount_table) {
-			mount_entry = getmntent(mount_table);
+			mount_entry = getmntent_df(mount_table);
 			if (!mount_entry) {
 				endmntent(mount_table);
 				break;
@@ -159,7 +226,7 @@ int df_main(int argc UNUSED_PARAM, char **argv)
 			mount_point = *argv++;
 			if (!mount_point)
 				break;
-			mount_entry = find_mount_point(mount_point, 1);
+			mount_entry = find_mount_point_df(mount_point, 1);
 			if (!mount_entry) {
 				bb_error_msg("%s: can't find mount point", mount_point);
  set_error:
